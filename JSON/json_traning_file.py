import requests
from bs4 import BeautifulSoup
import json

# 1 ------------------------------------------------------
url = 'http://parsinger.ru/html/mouse/3/3_11.html'
response = requests.get(url=url)
response.encoding = 'utf-8'
soup = BeautifulSoup(response.text, 'lxml')
# 1 ------------------------------------------------------

# 2 ------------------------------------------------------
result_json = {
    'name': soup.find('p', id='p_header').text,
    'price': soup.find('span', id='price').text}
# 2 ------------------------------------------------------

# 3 ------------------------------------------------------
with open('res.json', 'w', encoding='utf-8') as file:
    json.dump(result_json, file, indent=4, ensure_ascii=False)
# 3 ------------------------------------------------------


# >>> {
#     "name": "Мышь Logitech G PRO HERO Black USB проводная",
#     "price": "5100 руб"
# }
# В этом блоке мы совершили get запрос на страницу и передали результат запроса в конструктор BeautifulSoup;
# Создали простой словарь result_json={} , вручную обозначили ключи, а значения для словаря мы получили
# из объекта soup с помощью тегов;
# В менеджере контекста with  обозначили название файла с расширением .json, указали кодировку "utf-8".
# json.dump() - преобразует объекты python (в нашем примере это словарь) в соответствующий объект JSON.
# Метод .dump() первым параметром ожидает словарь, который мы будем записывать в файл, а вторым параметром - файл,
# куда мы будем записывать наш словарь.
# indent=4 улучшает читаемость файла json, и обозначает отступ в пробелах;
# ensure_ascii=False - если не указать, могут возникнуть проблемы с кодировкой.
# Если установить значение True, то кириллические символы будут отображены в ascii,
# примерно вот так \u041c\u044b\u0448\u044c.
# json.dumps() - отличается лишь тем, что кодирует наши данные в Python string  и служит для преобразования
# примитивных типов данных. В ваших парсерах вы, скорее всего, будете использовать именно первый вариант;
# json.load() - метод считывает файл в формате JSON и возвращает объекты Python,
# про метод load() подробнее мы поговорим позже когда, будем считывать json-файлы;
# json.loads() - метод считывает строку в формате JSON и возвращает объекты Python.